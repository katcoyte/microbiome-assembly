
%% Set up simulation
S = 10; % species number
C = 0.5; % connectivity 
self_inhibition = 0.05; % -s parameter in gLV model
PmSpace =  linspace(0.0,1,11); % range of cooperation values
repeats = 150;
plotOn =0;
sigma_vec = [0.025, 0.05, 0.075, 0.1, 0.125]; % range of interaction strengths

invasion_level = 0.1;
cut_off_level = 0.01;

%% run assembly

new_directory_name = 'main_results';

for s_ix = 1:length(sigma_vec)
    
    sigma = sigma_vec(s_ix);
    cap_all_reachable_standard = zeros(length(PmSpace), repeats);
    cap_all_reachable_fed = zeros(length(PmSpace), repeats);
    cap_all_reachable_multiple_arrivals = zeros(length(PmSpace), repeats);
    cap_all_reachable_multiple_arrivals_2 = zeros(length(PmSpace), repeats);
        
    for pm_index = 1:length(PmSpace)
        
        Pm = PmSpace(pm_index);
        
        for rep = 1:repeats
             
            [M, mu] = utility_build_pool_community_general_positive(S, C, sigma, Pm, self_inhibition);
       
            ['Pm:_', num2str(Pm), '_Rep:_', num2str(rep)]
             
            % Standard run
             arrival_size = 1;
            [cap_reachable,...
                cap_succession_mtx,...
                cap_replacement_mtx,...
                cap_extinction_mtx,...
                ~,...
                cap_all_communities,...
                cap_all_permanences,...
                cap_all_steady_states] = single_assembly_run_withcap(M,...
                mu,...
                S,...
                C,...
                Pm,...
                [],...
                [],...
                [],...
                arrival_size,...
                invasion_level,...
                cut_off_level,...
                0);
            cap_all_reachable_standard(pm_index, rep) = cap_reachable(end);
            
           % Run with feeding
                    [cap_reachable_fed,...
                        cap_succession_mtx_fed,...
                        cap_replacement_mtx_fed,...
                        cap_extinction_mtx_fed,...
                        ~,...
                        cap_all_communities_fed,...
                        cap_all_permanences_fed,...
                        cap_all_steady_states_fed] = single_assembly_run_withcap(M,...
                        mu+0.1*ones(S,1),...
                        S,...
                        C,...
                        Pm,...
                        [],...
                        [],...
                        [],...
                        arrival_size,...
                        invasion_level,...
                        cut_off_level,...
                        0);
            cap_all_reachable_fed(pm_index, rep) = cap_reachable_fed(end);    
            

%            Run with two species arriving together
                    arrival_size=2;
                    [cap_reachable_ma1,...
                        cap_succession_mtx_ma1,...
                        cap_replacement_mtx_ma1,...
                        cap_extinction_mtx_ma1,...
                        ~,...
                        cap_all_communities_ma1,...
                        cap_all_permanences_ma1,...
                        cap_all_steady_states_ma1] = single_assembly_run_withcap(M,...
                        mu,...
                        S,...
                        C,...
                        Pm,...
                        cap_all_communities,...
                        cap_all_permanences,...
                        cap_all_steady_states,...
                        arrival_size,...
                        invasion_level,...
                        cut_off_level,...
                        0);
            
%            Run with three species arriving together
                    arrival_size=3;
                    [cap_reachable_ma2,...
                        cap_succession_mtx_ma2,...
                        cap_replacement_mtx_ma2,...
                        cap_extinction_mtx_ma2,...
                        ~,...
                        cap_all_communities_ma2,...
                        cap_all_permanences_ma2,...
                        cap_all_steady_states_ma2] = single_assembly_run_withcap(M,...
                        mu,...
                        S,...
                        C,...
                        Pm,...
                        cap_all_communities,...
                        cap_all_permanences,...
                        cap_all_steady_states,...
                        arrival_size,...
                        invasion_level,...
                        cut_off_level,...
                        0);
            

             cd([new_directory_name, '/pm_' num2str(pm_index)])
             save_string = ['main_Pm:_', num2str(Pm), '_Rep:_', num2str(rep), '_sigma_', num2str(sigma), '.mat'];
             save(save_string);
             cd ..
             cd ..
        end
        
    end
    
end


%%
figure;
ste_standard = sqrt(mean(cap_all_reachable_standard,2).*(1 - mean(cap_all_reachable_standard,2))/repeats);
errorbar(PmSpace, mean(cap_all_reachable_standard,2), ste_standard);
hold on


title('probability of assembly')
axis([0,1,0,1])
